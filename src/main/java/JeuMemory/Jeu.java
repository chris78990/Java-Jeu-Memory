/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package JeuMemory;

/**
 *
 * @author bouvr
 */
public class Jeu extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Jeu() {
        initComponents();
        setBounds(50,50,700,400);
        //initCartes();
        //Carte Carte1 = new JeuCarte("Photos/carte0.png","Photos/Dos.png",1);
        //Carte Carte2 = new JeuCarte("Photos/carte1.png","Photos/Dos.png",2);
        //uneCarte.setUrlFace("Photos/carte0.png");
        //System.out.println(uneCarte.getUrlFace());
        //BoitePhotos.add(Carte1);
        //BoitePhotos.add(Carte2);
        //Carte1.TournerVersFace();
        //Carte2.TournerVersDos();
        initCartes();

    }
    
    private void initCartes() {
        
        listeCartes = new JeuCarte [nbCartes];
        int cptr = 0 ;
        for (int i=0; i < nbCartes; i++)    {
            listeCartes[i] = new JeuCarte("Photos/carte"+cptr+".png", "Photos/dos.png", cptr);
            BoitePhotos.add(listeCartes[i]);
            
            // Ajouter un écouteur d'événements sur chaque carte de la liste
            listeCartes[i].addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    // exécuter la méthode :
                    carteMouseReleased(evt);
                }
            });
            
            cptr++;
            if(cptr == nbCartes/2) {    cptr = 0;   }
        }
        
    }
        
    // Actions à mener à l'écoute de l'événement mousReleased
    private void carteMouseReleased(java.awt.event.MouseEvent evt) {
        //System.out.println(nbclick);
        JeuCarte carteCliquee = (JeuCarte) evt.getSource();
            
        switch (nbclick)    {
            
            case 0:
                
                if (aRetourner) {
                    Card1.TournerVersDos();
                    Card2.TournerVersDos();
                    aRetourner = false;
                }
                
                nbclick = 1;
                Card1 = carteCliquee;
                Card1.TournerVersFace();
                Card1.removeMouseListener(Card1.getMouseListeners()[0]);
                break;
            
            case 1:
                nbclick = 0;
                Card2 = carteCliquee;
                Card2.TournerVersFace();
                if ( Card1.getId() != Card2.getId() ) { 
                    aRetourner = true;  

                    // Ajouter un écouteur d'événements sur chaque carte de la liste
                    Card1.addMouseListener(new java.awt.event.MouseAdapter() {
                        @Override
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                            // exécuter la méthode :
                            carteMouseReleased(evt);
                        }
                    });
                    
                    
                }
                else {
                    Card2.removeMouseListener(Card2.getMouseListeners()[0]);
                    nbPaires +=1;
                    System.out.println(nbPaires);
                    if (nbPaires > 23) {
                        new Jeu_Message(this, true);
                        BoitePhotos.removeAll();
                        BoitePhotos.revalidate();
                        initCartes();
                        nbPaires = 0;
                    }
                }
                break;
         
            
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BoitePhotos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BoitePhotos.setName(""); // NOI18N
        BoitePhotos.setLayout(new java.awt.GridLayout(4, 12, 1, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BoitePhotos, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BoitePhotos, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jeu().setVisible(true);
            }
        });
    }

    private JeuCarte [] listeCartes;
    private JeuCarte Card1, Card2;
    private static int nbCartes = 48;
    private int nbclick = 0;
    private boolean aRetourner = false;
    private int nbPaires = 0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BoitePhotos;
    // End of variables declaration//GEN-END:variables
}
